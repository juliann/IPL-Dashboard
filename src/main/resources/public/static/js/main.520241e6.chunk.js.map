{"version":3,"sources":["components/MatchDetailCard.tsx","components/MatchSmallCard.tsx","pages/TeamPage.tsx","components/YearSelector.tsx","pages/MatchPage.tsx","components/TeamTile.tsx","pages/HomePage.tsx","App.tsx","index.tsx"],"names":["MatchDetailCard","match","teamName","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","team","setTeam","useParams","useEffect","console","log","a","fetch","process","response","json","data","fetchTeams","title","value","totalMatches","totalWins","color","matches","slice","map","index","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","dotenv","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.520241e6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./MatchDetailCard.scss\";\n\ninterface IMatch {\n  id: number;\n  city: string;\n  date: string;\n  playerOfMatch: string;\n  venue: string;\n  team1: string;\n  team2: string;\n  tossDecision: string;\n  tossWinner: string;\n  matchWinner: string;\n  result: string;\n  resultMargin: string;\n  umpire1: string;\n  umpire2: string;\n}\ninterface Idata {\n  match: IMatch;\n  teamName: string;\n}\n\nexport const MatchDetailCard = ({ match, teamName }: Idata) => {\n  if (!match) return null;\n\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n  const otherTeamRoute = \"/teams/\" + otherTeam;\n  const isMatchWon: boolean = teamName === match.matchWinner;\n  return (\n    <div\n      className={\n        isMatchWon ? \"MatchDetailCard won-card\" : \"MatchDetailCard lost-card\"\n      }\n    >\n      <div>\n        <span className=\"vs\">vs</span>\n        <h1>\n          <Link to={otherTeamRoute}>{otherTeam}</Link>\n        </h1>\n        <h2 className=\"match-date\">{match.date}</h2>\n        <h3 className=\"match-venue\">{match.venue}</h3>\n        <h3 className=\"match-result\">\n          {match.matchWinner} won by {match.resultMargin} {match.result}\n        </h3>\n      </div>\n      <div className=\"additional-detail\">\n        <h3>First Inning</h3>\n        <p>{match.team1}</p>\n        <h3>Second Inning</h3>\n        <p>{match.team2}</p>\n        <h3>Man of the Match</h3>\n        <p>{match.playerOfMatch}</p>\n        <h3>Umpire</h3>\n        <p>\n          {match.umpire1}, {match.umpire2}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./MatchSmallCard.scss\";\nexport interface IMatch {\n  id: number;\n  city: string;\n  date: string;\n  playerOfMatch: string;\n  venue: string;\n  team1: string;\n  team2: string;\n  tossDecision: string;\n  tossWinner: string;\n  matchWinner: string;\n  result: string;\n  resultMargin: string;\n  umpire1: string;\n  umpire2: string;\n}\nexport interface Idata {\n  match: IMatch;\n  teamName: string;\n}\n\nexport const MatchSmallCard = ({ match, teamName }: Idata) => {\n  if (!match) return null;\n\n  const otherTeam: string =\n    match.team1 === teamName ? match.team2 : match.team1;\n  const otherTeamRoute: string = \"/teams/\" + otherTeam;\n  const isMatchWon: boolean = teamName === match.matchWinner;\n  return (\n    <div\n      className={\n        isMatchWon ? \"MatchSmallCard won-card\" : \"MatchSmallCard lost-card\"\n      }\n    >\n      <span className=\"vs\">vs</span>\n      <h1>\n        <Link to={otherTeamRoute}>{otherTeam}</Link>\n      </h1>\n      <p className=\"match-result\">\n        {match.matchWinner} won by {match.resultMargin} {match.result}\n      </p>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport \"./TeamPage.scss\";\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\nimport { MatchSmallCard } from \"../components/MatchSmallCard\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nexport interface ITeam {\n  id: number;\n  teamName: string;\n  totalMatches: number;\n  totalWins: number;\n  matches: {\n    id: number;\n    city: string;\n    date: string;\n    playerOfMatch: string;\n    venue: string;\n    team1: string;\n    team2: string;\n    tossDecision: string;\n    tossWinner: string;\n    matchWinner: string;\n    result: string;\n    resultMargin: string;\n    umpire1: string;\n    umpire2: string;\n  }[];\n}\nexport const TeamPage = () => {\n  const [team, setTeam] = useState<ITeam | undefined>();\n  const { teamName } = useParams<{ teamName: string }>();\n  useEffect(() => {\n    console.log(\"hi\");\n\n    const fetchTeams = async () => {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`\n      );\n      const data = await response.json();\n      setTeam(data);\n    };\n    fetchTeams();\n  }, [teamName]);\n\n  if (!team || !team.teamName) return <h1>not found</h1>;\n  return (\n    <div className=\"TeamPage\">\n      <div className=\"team-name-section\">\n        <h1 className=\"team-name\">{team.teamName}</h1>\n      </div>\n      <div className=\"win-loss-section\">\n        Wins/Losses\n        <PieChart\n          data={[\n            {\n              title: \"Losses\",\n              value: team.totalMatches - team.totalWins,\n              color: \"#a34d5d\",\n            },\n            { title: \"Wins\", value: team.totalWins, color: \"#4da375\" },\n          ]}\n        />\n      </div>\n      <div className=\"match-detail-section\">\n        <h3>latest Matches</h3>\n        <MatchDetailCard match={team.matches[0]} teamName={teamName} />\n      </div>\n\n      {team.matches.slice(1).map((match, index) => {\n        return (\n          <MatchSmallCard key={index} teamName={team.teamName} match={match} />\n        );\n      })}\n      <div className=\"more-button\">\n        <Link\n          to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}\n        >\n          more &gt;\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./YearSelector.scss\";\nimport { Link } from \"react-router-dom\";\n\nexport interface ITeamName {\n  teamName: string;\n}\n\nexport const YearSelector = (teamName: ITeamName) => {\n  let years = [];\n  const startYear = process.env.REACT_APP_DATA_START_YEAR;\n  const endYear = process.env.REACT_APP_DATA_END_YEAR;\n  console.log(teamName);\n  for (let i = startYear; i <= endYear; i++) {\n    years.push(i);\n  }\n  return (\n    <ol className=\"YearSelector\">\n      {years.map((year) => (\n        <li key={year}>\n          <Link to={`/teams/${teamName.teamName}/matches/${year}`}>{year}</Link>\n        </li>\n      ))}\n    </ol>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\nimport { IMatch } from \"../components/MatchSmallCard\";\nimport \"./MatchPage.scss\";\nimport { YearSelector } from \"../components/YearSelector\";\ninterface ParamTypes {\n  teamName: string;\n  year: string;\n}\n\nexport const MatchPage = () => {\n  const [matches, setMatches] = useState<IMatch[] | undefined>([]);\n\n  const { teamName, year } = useParams<ParamTypes>();\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`\n      );\n      const data = await response.json();\n      setMatches(data as IMatch[]);\n    };\n\n    fetchMatches();\n  }, [teamName, year]);\n\n  return (\n    <div className=\"MatchPage\">\n      <div className=\"year-selector\">\n        <h3>Select Year</h3>\n        <YearSelector teamName={teamName} />\n      </div>\n\n      <div>\n        <h1 className=\"page-header\">\n          {teamName} matches in {year}\n        </h1>\n        {matches &&\n          matches.map((match, index) => {\n            return (\n              <MatchDetailCard key={index} teamName={teamName} match={match} />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n","import { ITeamName } from \"./YearSelector\";\nimport React from \"react\";\nimport \"./TeamTile.scss\";\nimport { Link } from \"react-router-dom\";\nexport const TeamTile = (teamName: ITeamName) => {\n  return (\n    <div className=\"TeamTile\">\n      <h1>\n        <Link to={`/teams/${teamName.teamName}`}>{teamName.teamName}</Link>\n      </h1>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { TeamTile } from \"../components/TeamTile\";\nimport { ITeam } from \"./TeamPage\";\nimport \"./HomePage.scss\";\nimport React from \"react\";\n\nexport const HomePage = () => {\n  const [teams, setTeams] = useState<ITeam[]>([]);\n\n  useEffect(() => {\n    const fetchAllTeams = async () => {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_ROOT_URL}/team/`\n      );\n      const data = await response.json();\n\n      setTeams(data);\n    };\n    fetchAllTeams();\n  }, []);\n\n  return (\n    <div className=\"Homepage\">\n      <div className=\"header-section\">\n        <h1 className=\"app-name\">IPL Dashboard</h1>\n      </div>\n      <div className=\"team-grid\">\n        {teams.map((team, index) => (\n          <TeamTile teamName={team.teamName} key={index} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.scss\";\nimport { TeamPage } from \"./pages/TeamPage\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { MatchPage } from \"./pages/MatchPage\";\nimport { HomePage } from \"./pages/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as dotenv from \"dotenv\";\n\ndotenv.config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}